// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  displayName   String         @map("display_name") @db.VarChar(50)
  username      String         @unique @db.VarChar(30)
  password      String
  bio           String?        @db.VarChar(1000)
  role          Role           @default(USER)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  RefreshToken  RefreshToken[]
  FollowingUser Follow[]       @relation(name: "fk_following_user")
  FollowedUser  Follow[]       @relation(name: "fk_followed_user")

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("refresh_tokens")
}

model Follow {
  id              Int      @id @default(autoincrement())
  followingUserId Int      @map("following_user_id")
  followedUserId  Int      @map("followed_user_id")
  createdAt       DateTime @default(now()) @map("created_at")
  followingUser   User     @relation(name: "fk_following_user", fields: [followingUserId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  followedUser    User     @relation(name: "fk_followed_user", fields: [followedUserId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([followingUserId, followedUserId])
  @@map("follows")
}

enum Role {
  ADMIN
  USER
}
